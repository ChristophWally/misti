schemaname,tablename,policyname,cmd,roles,policy_sql
public,deck_words,Users can manage their deck words,ALL,{public},"CREATE POLICY ""Users can manage their deck words"" ON deck_words FOR ALL TO public USING ((EXISTS ( SELECT 1
   FROM decks
  WHERE ((decks.id = deck_words.deck_id) AND (decks.user_id = auth.uid())))));"
public,decks,Users can create own decks,INSERT,{public},"CREATE POLICY ""Users can create own decks"" ON decks FOR INSERT TO public WITH CHECK ((auth.uid() = user_id));"
public,decks,Users can delete own decks,DELETE,{public},"CREATE POLICY ""Users can delete own decks"" ON decks FOR DELETE TO public USING ((auth.uid() = user_id));"
public,decks,Users can update own decks,UPDATE,{public},"CREATE POLICY ""Users can update own decks"" ON decks FOR UPDATE TO public USING ((auth.uid() = user_id));"
public,decks,Users can view own decks,SELECT,{public},"CREATE POLICY ""Users can view own decks"" ON decks FOR SELECT TO public USING ((auth.uid() = user_id));"
public,dictionary,Dictionary is publicly readable,SELECT,{public},"CREATE POLICY ""Dictionary is publicly readable"" ON dictionary FOR SELECT TO public USING (true);"
public,profiles,Users can insert own profile,INSERT,{public},"CREATE POLICY ""Users can insert own profile"" ON profiles FOR INSERT TO public WITH CHECK ((auth.uid() = id));"
public,profiles,Users can update own profile,UPDATE,{public},"CREATE POLICY ""Users can update own profile"" ON profiles FOR UPDATE TO public USING ((auth.uid() = id));"
public,profiles,Users can view own profile,SELECT,{public},"CREATE POLICY ""Users can view own profile"" ON profiles FOR SELECT TO public USING ((auth.uid() = id));"
public,sentences,Sentences are publicly readable,SELECT,{public},"CREATE POLICY ""Sentences are publicly readable"" ON sentences FOR SELECT TO public USING (true);"
public,sentences,Service role can manage sentences,ALL,{service_role},"CREATE POLICY ""Service role can manage sentences"" ON sentences FOR ALL TO service_role USING (true);"
public,user_word_progress,Users can delete their own progress,DELETE,{public},"CREATE POLICY ""Users can delete their own progress"" ON user_word_progress FOR DELETE TO public USING ((auth.uid() = user_id));"
public,user_word_progress,Users can insert their own progress,INSERT,{public},"CREATE POLICY ""Users can insert their own progress"" ON user_word_progress FOR INSERT TO public WITH CHECK ((auth.uid() = user_id));"
public,user_word_progress,Users can update their own progress,UPDATE,{public},"CREATE POLICY ""Users can update their own progress"" ON user_word_progress FOR UPDATE TO public USING ((auth.uid() = user_id));"
public,user_word_progress,Users can view their own progress,SELECT,{public},"CREATE POLICY ""Users can view their own progress"" ON user_word_progress FOR SELECT TO public USING ((auth.uid() = user_id));"
public,word_audio_metadata,Audio metadata is publicly readable,SELECT,{public},"CREATE POLICY ""Audio metadata is publicly readable"" ON word_audio_metadata FOR SELECT TO public USING (true);"
public,word_forms,Word forms are publicly readable,SELECT,{public},"CREATE POLICY ""Word forms are publicly readable"" ON word_forms FOR SELECT TO public USING (true);"
public,word_relationships,Word relationships are publicly readable,SELECT,{public},"CREATE POLICY ""Word relationships are publicly readable"" ON word_relationships FOR SELECT TO public USING (true);"